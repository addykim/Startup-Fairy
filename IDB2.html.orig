<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Python: module views</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
</head><body bgcolor="#f0f0f8">

<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>views</strong></big></big></font></td
><td align=right valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/startupfairy/views.py">/home/startupfairy/views.py</a></font></td></tr></table>
    <p><tt>Serves&nbsp;all&nbsp;the&nbsp;routes&nbsp;for&nbsp;the&nbsp;application</tt></p>
<p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#aa55cc">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>

<tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="json.html">json</a><br>
</td><td width="25%" valign=top><a href="subprocess.html">subprocess</a><br>
</td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#eeaa77">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>

<tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt><a name="-about"><strong>about</strong></a>()</dt><dd><tt>Serve&nbsp;the&nbsp;about&nbsp;page</tt></dd></dl>
 <dl><dt><a name="-api_cities"><strong>api_cities</strong></a>(entity=None)</dt></dl>
 <dl><dt><a name="-api_companies"><strong>api_companies</strong></a>(entity=None)</dt></dl>
 <dl><dt><a name="-api_financialorgs"><strong>api_financialorgs</strong></a>(entity=None)</dt></dl>
 <dl><dt><a name="-api_people"><strong>api_people</strong></a>(entity=None)</dt></dl>
 <dl><dt><a name="-category"><strong>category</strong></a>(app_category)</dt><dd><tt>Render&nbsp;table&nbsp;template</tt></dd></dl>
 <dl><dt><a name="-details"><strong>details</strong></a>(app_category, entity)</dt><dd><tt>Serve&nbsp;the&nbsp;an&nbsp;entity's&nbsp;page</tt></dd></dl>
 <dl><dt><a name="-favicon"><strong>favicon</strong></a>()</dt></dl>
 <dl><dt><a name="-index"><strong>index</strong></a>()</dt><dd><tt>Serve&nbsp;the&nbsp;home/index&nbsp;page</tt></dd></dl>
 <dl><dt><a name="-listdir"><strong>listdir</strong></a>(path=None)</dt><dd><tt>Return&nbsp;a&nbsp;list&nbsp;containing&nbsp;the&nbsp;names&nbsp;of&nbsp;the&nbsp;files&nbsp;in&nbsp;the&nbsp;directory.<br>
&nbsp;<br>
path&nbsp;can&nbsp;be&nbsp;specified&nbsp;as&nbsp;either&nbsp;str&nbsp;or&nbsp;bytes.&nbsp;&nbsp;If&nbsp;path&nbsp;is&nbsp;bytes,<br>
&nbsp;&nbsp;the&nbsp;filenames&nbsp;returned&nbsp;will&nbsp;also&nbsp;be&nbsp;bytes;&nbsp;in&nbsp;all&nbsp;other&nbsp;circumstances<br>
&nbsp;&nbsp;the&nbsp;filenames&nbsp;returned&nbsp;will&nbsp;be&nbsp;str.<br>
If&nbsp;path&nbsp;is&nbsp;None,&nbsp;uses&nbsp;the&nbsp;path='.'.<br>
On&nbsp;some&nbsp;platforms,&nbsp;path&nbsp;may&nbsp;also&nbsp;be&nbsp;specified&nbsp;as&nbsp;an&nbsp;open&nbsp;file&nbsp;descriptor;\<br>
&nbsp;&nbsp;the&nbsp;file&nbsp;descriptor&nbsp;must&nbsp;refer&nbsp;to&nbsp;a&nbsp;directory.<br>
&nbsp;&nbsp;If&nbsp;this&nbsp;functionality&nbsp;is&nbsp;unavailable,&nbsp;using&nbsp;it&nbsp;raises&nbsp;NotImplementedError.<br>
&nbsp;<br>
The&nbsp;list&nbsp;is&nbsp;in&nbsp;arbitrary&nbsp;order.&nbsp;&nbsp;It&nbsp;does&nbsp;not&nbsp;include&nbsp;the&nbsp;special<br>
entries&nbsp;'.'&nbsp;and&nbsp;'..'&nbsp;even&nbsp;if&nbsp;they&nbsp;are&nbsp;present&nbsp;in&nbsp;the&nbsp;directory.</tt></dd></dl>
 <dl><dt><a name="-run_tests"><strong>run_tests</strong></a>()</dt></dl>
</td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#55aa55">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Data</strong></big></font></td></tr>

<tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><strong>ALT_NAMES</strong> = {'cities': 'Cities', 'companies': 'Companies', 'financialorgs': 'Financial Organizations', 'people': 'People'}<br>
<strong>abort</strong> = &lt;werkzeug.exceptions.Aborter object&gt;<br>
<strong>db</strong> = &lt;SQLAlchemy engine=None&gt;<br>
<strong>public_views</strong> = &lt;flask.blueprints.Blueprint object&gt;<br>
<strong>request</strong> = &lt;LocalProxy unbound&gt;</td></tr></table>
</body></html><!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Python: module models</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
</head><body bgcolor="#f0f0f8">

<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>models</strong></big></big></font></td
><td align=right valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/startupfairy/models.py">/home/startupfairy/models.py</a></font></td></tr></table>
    <p><tt>Implementation&nbsp;of&nbsp;models&nbsp;of&nbsp;startups&nbsp;and&nbsp;their&nbsp;attributes</tt></p>
<p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ee77aa">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>

<tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl>
<dt><font face="helvetica, arial">flask_sqlalchemy.Model(<a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a>)
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="models.html#City">City</a>
</font></dt><dt><font face="helvetica, arial"><a href="models.html#Company">Company</a>
</font></dt><dt><font face="helvetica, arial"><a href="models.html#FinancialOrg">FinancialOrg</a>
</font></dt><dt><font face="helvetica, arial"><a href="models.html#Person">Person</a>
</font></dt></dl>
</dd>
</dl>
 <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="City">class <strong>City</strong></a>(flask_sqlalchemy.Model)</font></td></tr>

<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Implementation&nbsp;of&nbsp;<a href="#City">City</a>&nbsp;model&nbsp;and&nbsp;its&nbsp;attributes<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="models.html#City">City</a></dd>
<dd>flask_sqlalchemy.Model</dd>
<dd><a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a></dd>
<dd><a href="builtins.html#object">builtins.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="City-__init__"><strong>__init__</strong></a>(self, city_id, name, state, region, companies, financial_orgs, people)</dt><dd><tt>Set&nbsp;column&nbsp;values</tt></dd></dl>

<dl><dt><a name="City-__repr__"><strong>__repr__</strong></a>(self)</dt><dd><tt>How&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;<a href="#City">City</a>&nbsp;is&nbsp;represented</tt></dd></dl>

<dl><dt><a name="City-dictionary"><strong>dictionary</strong></a>(self)</dt><dd><tt>Returns&nbsp;a&nbsp;dictionary&nbsp;representation&nbsp;of&nbsp;the&nbsp;class&nbsp;data</tt></dd></dl>

<hr>
Data descriptors defined here:<br>
<dl><dt><strong>city_id</strong></dt>
</dl>
<dl><dt><strong>companies</strong></dt>
</dl>
<dl><dt><strong>financial_orgs</strong></dt>
</dl>
<dl><dt><strong>name</strong></dt>
</dl>
<dl><dt><strong>people</strong></dt>
</dl>
<dl><dt><strong>region</strong></dt>
</dl>
<dl><dt><strong>state</strong></dt>
</dl>
<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>__mapper__</strong> = &lt;Mapper at 0x7fce11614e48; City&gt;</dl>

<dl><dt><strong>__table__</strong> = Table('city', MetaData(bind=None), Column('city_...n('people', String(), table=&lt;city&gt;), schema=None)</dl>

<dl><dt><strong>__tablename__</strong> = 'city'</dl>

<hr>
Methods inherited from flask_sqlalchemy.Model:<br>
<dl><dt><strong>query</strong></dt>
</dl>

<hr>
Data and other attributes inherited from flask_sqlalchemy.Model:<br>
<dl><dt><strong>metadata</strong> = MetaData(bind=None)</dl>

<hr>
Data descriptors inherited from <a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a>:<br>
<dl><dt><strong>__dict__</strong></dt>
<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dd>
</dl>
<dl><dt><strong>__weakref__</strong></dt>
<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dd>
</dl>
<hr>
Data and other attributes inherited from <a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a>:<br>
<dl><dt><strong>query_class</strong> = &lt;class 'flask_sqlalchemy.BaseQuery'&gt;<dd><tt>The&nbsp;default&nbsp;query&nbsp;object&nbsp;used&nbsp;for&nbsp;models,&nbsp;and&nbsp;exposed&nbsp;as<br>
:attr:`~SQLAlchemy.Query`.&nbsp;This&nbsp;can&nbsp;be&nbsp;subclassed&nbsp;and<br>
replaced&nbsp;for&nbsp;individual&nbsp;models&nbsp;by&nbsp;setting&nbsp;the&nbsp;:attr:`~Model.query_class`<br>
attribute.&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;subclass&nbsp;of&nbsp;a&nbsp;standard&nbsp;SQLAlchemy<br>
:class:`~sqlalchemy.orm.query.Query`&nbsp;class&nbsp;and&nbsp;has&nbsp;all&nbsp;the&nbsp;methods&nbsp;of&nbsp;a<br>
standard&nbsp;query&nbsp;as&nbsp;well.</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Company">class <strong>Company</strong></a>(flask_sqlalchemy.Model)</font></td></tr>

<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Implementation&nbsp;of&nbsp;<a href="#Company">Company</a>&nbsp;model&nbsp;and&nbsp;its&nbsp;attributes<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="models.html#Company">Company</a></dd>
<dd>flask_sqlalchemy.Model</dd>
<dd><a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a></dd>
<dd><a href="builtins.html#object">builtins.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="Company-__init__"><strong>__init__</strong></a>(self, company_id, name, summary, people, city, financial_orgs, twitter, website, logo_url)</dt><dd><tt>Set&nbsp;column&nbsp;values</tt></dd></dl>

<dl><dt><a name="Company-__repr__"><strong>__repr__</strong></a>(self)</dt><dd><tt>How&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;<a href="#Company">Company</a>&nbsp;is&nbsp;represented</tt></dd></dl>

<dl><dt><a name="Company-dictionary"><strong>dictionary</strong></a>(self)</dt><dd><tt>Returns&nbsp;a&nbsp;dictionary&nbsp;representation&nbsp;of&nbsp;the&nbsp;class&nbsp;data</tt></dd></dl>

<hr>
Data descriptors defined here:<br>
<dl><dt><strong>city</strong></dt>
</dl>
<dl><dt><strong>company_id</strong></dt>
</dl>
<dl><dt><strong>financial_orgs</strong></dt>
</dl>
<dl><dt><strong>logo_url</strong></dt>
</dl>
<dl><dt><strong>name</strong></dt>
</dl>
<dl><dt><strong>people</strong></dt>
</dl>
<dl><dt><strong>summary</strong></dt>
</dl>
<dl><dt><strong>twitter</strong></dt>
</dl>
<dl><dt><strong>website</strong></dt>
</dl>
<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>__mapper__</strong> = &lt;Mapper at 0x7fce115f3dd8; Company&gt;</dl>

<dl><dt><strong>__table__</strong> = Table('company', MetaData(bind=None), Column('co...go_url', String(), table=&lt;company&gt;), schema=None)</dl>

<dl><dt><strong>__tablename__</strong> = 'company'</dl>

<hr>
Methods inherited from flask_sqlalchemy.Model:<br>
<dl><dt><strong>query</strong></dt>
</dl>

<hr>
Data and other attributes inherited from flask_sqlalchemy.Model:<br>
<dl><dt><strong>metadata</strong> = MetaData(bind=None)</dl>

<hr>
Data descriptors inherited from <a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a>:<br>
<dl><dt><strong>__dict__</strong></dt>
<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dd>
</dl>
<dl><dt><strong>__weakref__</strong></dt>
<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dd>
</dl>
<hr>
Data and other attributes inherited from <a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a>:<br>
<dl><dt><strong>query_class</strong> = &lt;class 'flask_sqlalchemy.BaseQuery'&gt;<dd><tt>The&nbsp;default&nbsp;query&nbsp;object&nbsp;used&nbsp;for&nbsp;models,&nbsp;and&nbsp;exposed&nbsp;as<br>
:attr:`~SQLAlchemy.Query`.&nbsp;This&nbsp;can&nbsp;be&nbsp;subclassed&nbsp;and<br>
replaced&nbsp;for&nbsp;individual&nbsp;models&nbsp;by&nbsp;setting&nbsp;the&nbsp;:attr:`~Model.query_class`<br>
attribute.&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;subclass&nbsp;of&nbsp;a&nbsp;standard&nbsp;SQLAlchemy<br>
:class:`~sqlalchemy.orm.query.Query`&nbsp;class&nbsp;and&nbsp;has&nbsp;all&nbsp;the&nbsp;methods&nbsp;of&nbsp;a<br>
standard&nbsp;query&nbsp;as&nbsp;well.</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FinancialOrg">class <strong>FinancialOrg</strong></a>(flask_sqlalchemy.Model)</font></td></tr>

<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Implementation&nbsp;of&nbsp;Financial&nbsp;Organization&nbsp;model&nbsp;and&nbsp;its&nbsp;attributes<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="models.html#FinancialOrg">FinancialOrg</a></dd>
<dd>flask_sqlalchemy.Model</dd>
<dd><a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a></dd>
<dd><a href="builtins.html#object">builtins.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="FinancialOrg-__init__"><strong>__init__</strong></a>(self, financial_org_id, name, summary, city, companies, twitter, website, logo_url)</dt><dd><tt>Set&nbsp;column&nbsp;values</tt></dd></dl>

<dl><dt><a name="FinancialOrg-__repr__"><strong>__repr__</strong></a>(self)</dt><dd><tt>How&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;Financial&nbsp;Organization&nbsp;is&nbsp;represented</tt></dd></dl>

<dl><dt><a name="FinancialOrg-dictionary"><strong>dictionary</strong></a>(self)</dt><dd><tt>Returns&nbsp;a&nbsp;dictionary&nbsp;representation&nbsp;of&nbsp;the&nbsp;class&nbsp;data</tt></dd></dl>

<hr>
Data descriptors defined here:<br>
<dl><dt><strong>city</strong></dt>
</dl>
<dl><dt><strong>companies</strong></dt>
</dl>
<dl><dt><strong>financial_org_id</strong></dt>
</dl>
<dl><dt><strong>logo_url</strong></dt>
</dl>
<dl><dt><strong>name</strong></dt>
</dl>
<dl><dt><strong>summary</strong></dt>
</dl>
<dl><dt><strong>twitter</strong></dt>
</dl>
<dl><dt><strong>website</strong></dt>
</dl>
<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>__mapper__</strong> = &lt;Mapper at 0x7fce116143c8; FinancialOrg&gt;</dl>

<dl><dt><strong>__table__</strong> = Table('financial_org', MetaData(bind=None), Colu...', String(), table=&lt;financial_org&gt;), schema=None)</dl>

<dl><dt><strong>__tablename__</strong> = 'financial_org'</dl>

<hr>
Methods inherited from flask_sqlalchemy.Model:<br>
<dl><dt><strong>query</strong></dt>
</dl>

<hr>
Data and other attributes inherited from flask_sqlalchemy.Model:<br>
<dl><dt><strong>metadata</strong> = MetaData(bind=None)</dl>

<hr>
Data descriptors inherited from <a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a>:<br>
<dl><dt><strong>__dict__</strong></dt>
<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dd>
</dl>
<dl><dt><strong>__weakref__</strong></dt>
<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dd>
</dl>
<hr>
Data and other attributes inherited from <a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a>:<br>
<dl><dt><strong>query_class</strong> = &lt;class 'flask_sqlalchemy.BaseQuery'&gt;<dd><tt>The&nbsp;default&nbsp;query&nbsp;object&nbsp;used&nbsp;for&nbsp;models,&nbsp;and&nbsp;exposed&nbsp;as<br>
:attr:`~SQLAlchemy.Query`.&nbsp;This&nbsp;can&nbsp;be&nbsp;subclassed&nbsp;and<br>
replaced&nbsp;for&nbsp;individual&nbsp;models&nbsp;by&nbsp;setting&nbsp;the&nbsp;:attr:`~Model.query_class`<br>
attribute.&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;subclass&nbsp;of&nbsp;a&nbsp;standard&nbsp;SQLAlchemy<br>
:class:`~sqlalchemy.orm.query.Query`&nbsp;class&nbsp;and&nbsp;has&nbsp;all&nbsp;the&nbsp;methods&nbsp;of&nbsp;a<br>
standard&nbsp;query&nbsp;as&nbsp;well.</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Person">class <strong>Person</strong></a>(flask_sqlalchemy.Model)</font></td></tr>

<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Implementation&nbsp;of&nbsp;<a href="#Person">Person</a>&nbsp;model&nbsp;and&nbsp;its&nbsp;attributes<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="models.html#Person">Person</a></dd>
<dd>flask_sqlalchemy.Model</dd>
<dd><a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a></dd>
<dd><a href="builtins.html#object">builtins.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="Person-__init__"><strong>__init__</strong></a>(self, person_id, name, summary, city, companies, role, twitter, logo_url)</dt><dd><tt>Set&nbsp;column&nbsp;values</tt></dd></dl>

<dl><dt><a name="Person-__repr__"><strong>__repr__</strong></a>(self)</dt><dd><tt>How&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;<a href="#Person">Person</a>&nbsp;is&nbsp;represented</tt></dd></dl>

<dl><dt><a name="Person-dictionary"><strong>dictionary</strong></a>(self)</dt><dd><tt>Returns&nbsp;a&nbsp;dictionary&nbsp;representation&nbsp;of&nbsp;the&nbsp;class&nbsp;data</tt></dd></dl>

<hr>
Data descriptors defined here:<br>
<dl><dt><strong>city</strong></dt>
</dl>
<dl><dt><strong>companies</strong></dt>
</dl>
<dl><dt><strong>logo_url</strong></dt>
</dl>
<dl><dt><strong>name</strong></dt>
</dl>
<dl><dt><strong>person_id</strong></dt>
</dl>
<dl><dt><strong>role</strong></dt>
</dl>
<dl><dt><strong>summary</strong></dt>
</dl>
<dl><dt><strong>twitter</strong></dt>
</dl>
<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>__mapper__</strong> = &lt;Mapper at 0x7fce11614908; Person&gt;</dl>

<dl><dt><strong>__table__</strong> = Table('person', MetaData(bind=None), Column('per...ogo_url', String(), table=&lt;person&gt;), schema=None)</dl>

<dl><dt><strong>__tablename__</strong> = 'person'</dl>

<hr>
Methods inherited from flask_sqlalchemy.Model:<br>
<dl><dt><strong>query</strong></dt>
</dl>

<hr>
Data and other attributes inherited from flask_sqlalchemy.Model:<br>
<dl><dt><strong>metadata</strong> = MetaData(bind=None)</dl>

<hr>
Data descriptors inherited from <a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a>:<br>
<dl><dt><strong>__dict__</strong></dt>
<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dd>
</dl>
<dl><dt><strong>__weakref__</strong></dt>
<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dd>
</dl>
<hr>
Data and other attributes inherited from <a href="flask_sqlalchemy.html#Model">flask_sqlalchemy.Model</a>:<br>
<dl><dt><strong>query_class</strong> = &lt;class 'flask_sqlalchemy.BaseQuery'&gt;<dd><tt>The&nbsp;default&nbsp;query&nbsp;object&nbsp;used&nbsp;for&nbsp;models,&nbsp;and&nbsp;exposed&nbsp;as<br>
:attr:`~SQLAlchemy.Query`.&nbsp;This&nbsp;can&nbsp;be&nbsp;subclassed&nbsp;and<br>
replaced&nbsp;for&nbsp;individual&nbsp;models&nbsp;by&nbsp;setting&nbsp;the&nbsp;:attr:`~Model.query_class`<br>
attribute.&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;subclass&nbsp;of&nbsp;a&nbsp;standard&nbsp;SQLAlchemy<br>
:class:`~sqlalchemy.orm.query.Query`&nbsp;class&nbsp;and&nbsp;has&nbsp;all&nbsp;the&nbsp;methods&nbsp;of&nbsp;a<br>
standard&nbsp;query&nbsp;as&nbsp;well.</tt></dl>

</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#55aa55">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Data</strong></big></font></td></tr>

<tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><strong>db</strong> = &lt;SQLAlchemy engine=None&gt;</td></tr></table>
</body></html>
